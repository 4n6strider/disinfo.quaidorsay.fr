{"version":3,"sources":["node_modules/regenerator-runtime/runtime.js","explorer.js"],"names":["document","addEventListener","window","fetch","init","notification","requestHeaders","method","headers","async_fetch","url","response","ok","json","Error","status","getServices","then","data","populate","listenSubmit","console","log","request","Request","services","$form_services","getElementById","$form_typeofdocuments","Object","entries","key","value","option","Option","dataset","typeofdocuments","add","event","innerHTML","typesofdocuments","target","selectedOptions","item","split","forEach","type","$form_explorer","preventDefault","formData","FormData","service","get","firstdocumentdate","seconddocumentdate","loadDocs","docs","diff","catch","err","getDoc","doc1","doc2","Array","date","route","encodeURI","error","next_version","substr","$doc1","innerText","$doc2","msg","$notification","getElementsByClassName","$notification_content","classList","toggle"],"mappings":";AAAA;ACAA,ADCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBAA,ADiBA,QCjBQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAEnD,ADgBD,MChBKC,MAAM,CAACC,KAAX,EAAkB;AACjBC,ADgBF,IChBEA,IAAI;AACJ,ADgBF,GClBC,MAEO;AACNC,ADgBF,IChBEA,YAAY,CAAC,OAAD,EAAU,kCAAV,CAAZ;AACA,ADgBF;AACA;ACfC,ADgBD,MChBOC,cAAc,GAAG;AACtBC,ADgBF,IChBEA,MAAM,EAAE,KADc;AAEtBC,ADgBF,IChBEA,OAAO,EAAE;AACR,ADgBH,gBChBa,kBADF;AAER,ADgBH,sBChBmB;AAFR,ADmBX;ACrBwB,ADsBxB,GCtBC;ADuBD;AC/BoD,ADgCpD,WChBgBC,WAhBoC;AAAA,ADiCpD;ACjCoD,ADkCpD;AACA;ACnCoD,ADoCpD;ACpCoD,ADqCpD,2ECrBC,iBAA2BC,GAA3B;AAAA,ADsBD;ACtBC,ADuBD;ACvBC,ADwBD;ACxBC,ADyBD;ACzBC,AD0BD;AC1BC,AD2BD;AC3BC,AD4BD,qBC3BuBP,KAAK,CAACO,GAAD,CAD3B;AD6BD;AC7BC,AD8BD;AC7BMC,AD8BN,cC9BMA,QADL;ADgCD;AChCC,ADiCD,mBC/BMA,QAAQ,CAACC,EAFd;AAAA,ADkCD;AClCC,ADmCD;ACnCC,ADoCD;AACA;ACrCC,ADsCD,+CCpC0BD,QAAQ,CAACE,IAAT,EAFzB;ADuCD;ACvCC,ADwCD;ACxCC,ADyCD,oBCtCQ,IAAIC,KAAJ,CAAUH,QAAQ,CAACI,MAAnB,CAHP;AD0CD;AC1CC,AD2CD;AC3CC,AD4CD;AC5CC,AD6CD;AC7CC,AD8CD;AC9CC,AD+CD;AC/CC,ADgDD;AChDC,ADiDD,KCjEoD;AAAA,ADkEpD;AClEoD,ADmEpD;AACA;ACpEoD,ADqEpD,WC/CgBX,IAtBoC;AAAA,ADsEpD;ACtEoD,ADuEpD;AACA;ACxEoD,ADyEpD;ACzEoD,AD0EpD,oECpDC;AAAA,ADqDD;ACrDC,ADsDD;ACtDC,ADuDD;ACvDC,ADwDD;ACvDEY,ADwDF,cCxDEA,WAAW,GACTC,IADF,CACO,UAAAC,IAAI,EAAI;AACbC,ADuDJ,gBCvDIA,QAAQ,CAACD,IAAD,CAAR;AACA,ADuDJ,eC1DE,EAIED,IAJF,CAIO,YAAM;AACXG,ADsDJ,gBCtDIA,YAAY;AACZ,ADsDJ,eC5DE;AD6DF;AC9DC,AD+DD;AC/DC,ADgED;AChEC,ADiED;ACjEC,ADkED;AClEC,ADmED;ACnEC,ADoED;ACpEC,ADqED,KC3FoD;AAAA,AD4FpD;AC5FoD,AD6FpD;AACA;AC9FoD,AD+FpD,WC/DgBJ,WAhCoC;AAAA,ADgGpD;AChGoD,ADiGpD;AACA;AClGoD,ADmGpD;ACnGoD,ADoGpD,2ECpEC;AAAA,ADqED;ACrEC,ADsED;ACtEC,ADuED;ACvEC,ADwED;ACxEC,ADyED;ACxEEK,ADyEF,cCzEEA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACIC,ADyEN,cCzEMA,OAFL,GAEe,IAAIC,OAAJ,CAAY,0DAAZ,EAAwElB,cAAxE,CAFf;AAAA,AD4ED,gDCzESG,WAAW,CAACc,OAAD,CAHnB;AD6ED;AC7EC,AD8ED;AC9EC,AD+ED;AC/EC,ADgFD;AChFC,ADiFD;ACjFC,ADkFD;AClFC,ADmFD;ACnFC,ADoFD,KCpHoD;AAAA,ADqHpD;ACrHoD,ADsHpD;AACA;ACjFC,ADkFD,WClFUJ,QAAT,CAAkBM,QAAlB,EAA4B;AAC3BJ,ADkFF,IClFEA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBG,QAAvB;AACA,ADkFF,QClFMC,cAAc,GAAG1B,QAAQ,CAAC2B,cAAT,CAAwB,eAAxB,CAArB;AACA,ADkFF,QClFMC,qBAAqB,GAAG5B,QAAQ,CAAC2B,cAAT,CAAwB,sBAAxB,CAA5B;ADmFF;AClFE,ADmFF,uCCnF6BE,MAAM,CAACC,OAAP,CAAeL,QAAf,CAA3B,qCAAqD;AAAA,ADoFvD;ACpFuD,ADqFvD,UCrFcM,GAAyC;AAAA,ADsFvD,UCtFmBC,KAAoC;ADuFvD;ACtFG,ADuFH,UCvFOC,MAAM,GAAG,IAAIC,MAAJ,CAAWH,GAAX,EAAgBA,GAA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DuHD;ACvHC,ADwHD;ACxHC,ADyHD;ACzHC,AD0HD;AC1HC,AD2HD;AC1HE3C,AD2HF,cC3HEA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB6B,OAAtB,EAA+BL,IAA/B,EAAqCkB,IAArC;AACIC,AD2HN,cC3HMA,KAFL,GAEaC,SAAS,CAAC,mEAAmEf,OAAnE,GAA6E,GAA7E,GAAmFL,IAAnF,GAA0F,GAA1F,GAAgGkB,IAAjG,CAFtB;AAGKzC,AD2HN,cC3HMA,OAHL,GAGe,IAAIC,OAAJ,CAAYyC,KAAZ,EAAmB3D,cAAnB,CAHf;AAAA,AD+HD;AC/HC,ADgID,qBC5HuBH,KAAK,CAACoB,OAAD,CAJ3B;ADiID;ACjIC,ADkID;AC9HMZ,AD+HN,cC/HMA,QAJL;ADoID;ACpIC,ADqID,mBChIMA,QAAQ,CAACC,EALd;AAAA,ADsID;ACtIC,ADuID;ACvIC,ADwID;AACA;ACzIC,AD0ID;AC1IC,AD2ID,qBCrIoBD,QAAQ,CAACE,IAAT,EANnB;AD4ID;AC5IC,AD6ID;ACvIOK,ADwIP,cCxIOA,IANN;AD+ID;AC/IC,ADgJD,mBCzIOA,IAAI,CAACiD,KAPX;AAAA,ADiJD;ACjJC,ADkJD;AClJC,ADmJD;AACA;ACpJC,ADqJD,oBC9IyB,IAAIrD,KAAJ,CAAUI,IAAI,CAACiD,KAAf,CAPxB;ADsJD;ACtJC,ADuJD;ACvJC,ADwJD,oBChJOjD,IAAI,CAACA,IAAL,IAAa,EARnB;AAAA,ADyJD;ACzJC,AD0JD;AC1JC,AD2JD;AACA;AC5JC,AD6JD;AC7JC,AD8JD,qBCnJiB0C,MAAM,CAACT,OAAD,EAAUL,IAAV,EAAgB5B,IAAI,CAACkD,YAAL,CAAkBC,MAAlB,CAAyB,CAAzB,EAA4B,EAA5B,CAAhB,CAXtB;AD+JD;AC/JC,ADgKD;AChKC,ADiKD;AACA;AClKC,ADmKD;ACnKC,ADoKD,gDCvJenD,IAbd;ADqKD;ACrKC,ADsKD;ACtKC,ADuKD;ACvKC,ADwKD;AACA;ACzKC,AD0KD;AC1KC,AD2KD,oBC5JS,IAAIJ,KAAJ,CAAUH,QAAQ,CAACI,MAAnB,CAfR;AD4KD;AC5KC,AD6KD;AC7KC,AD8KD;AC9KC,AD+KD;AC/KC,ADgLD;AChLC,ADiLD;ACjLC,ADkLD;AClLC,ADmLD,KCtQoD;AAAA,ADuQpD;ACvQoD,ADwQpD;AACA;ACnKC,ADoKD,WCpKU0C,IAAT,CAAcD,IAAd,EAAoB;AACnBnC,ADoKF,ICpKEA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBkC,IAApB;AACA,ADoKF,QCpKMc,KAAK,GAAGtE,QAAQ,CAAC2B,cAAT,CAAwB,MAAxB,CAAZ;AACA2C,ADoKF,ICpKEA,KAAK,CAACC,SAAN,GAAkBf,IAAI,CAAC,CAAD,CAAJ,CAAQtC,IAA1B;AACA,ADoKF,QCpKMsD,KAAK,GAAGxE,QAAQ,CAAC2B,cAAT,CAAwB,MAAxB,CAAZ;AACA6C,ADoKF,ICpKEA,KAAK,CAACD,SAAN,GAAkBf,IAAI,CAAC,CAAD,CAAJ,CAAQtC,IAA1B;AAEA,ADmKF;AClKA,ADmKA;AClKA,ADmKA;AClKA,ADmKA;AClKA,ADmKA;AClKA,ADmKA;AClKA,ADmKA;AClKA,ADmKA;AClKA,ADmKA;AClKA,ADmKA;AClKE,ADmKF;ACjKC,ADkKD;AACA;AACA;ACnKC,ADoKD,WCpKUb,YAAT,CAAsByC,IAAtB,EAA4B2B,GAA5B,EAAiC;AAChC,ADoKF,QCpKQC,aAAa,GAAG1E,QAAQ,CAAC2E,sBAAT,CAAgC,cAAhC,EAAgD,CAAhD,CAAtB;AACA,ADoKF,QCpKQC,qBAAqB,GAAG5E,QAAQ,CAAC2E,sBAAT,CAAgC,sBAAhC,EAAwD,CAAxD,CAA9B;AACAC,ADoKF,ICpKEA,qBAAqB,CAACL,SAAtB,GAAkCE,GAAlC;AACAC,ADoKF,ICpKEA,aAAa,CAACG,SAAd,CAAwBC,MAAxB,CAA+B,kBAAkBhC,IAAjD;AACA,ADoKF,GCnSoD,CAiInD;AAEA,ADiKD;AC/JC,ADgKD;AC9JC,AD+JD;AC7JC,AD8JD;AACA;AC7JC,AD8JD,CCzfile":"explorer.js","sourceRoot":"..\\js\\cgus","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import 'regenerator-runtime/runtime'\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n\r\n\tif (window.fetch) {\r\n\t\tinit();\r\n\t} else {\r\n\t\tnotification('error', 'Your browser is not supported 😥');\r\n\t}\r\n\r\n\tconst requestHeaders = {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\t'Accept': 'application/json',\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t}\r\n\t}\r\n\r\n\tasync function async_fetch(url) {\r\n\t\tlet response = await fetch(url)\r\n\t\tif (response.ok) return response.json()\r\n\t\tthrow new Error(response.status)\r\n\t}\r\n\r\n\tasync function init() {\r\n\t\tgetServices()\r\n\t\t\t.then(data => {\r\n\t\t\t\tpopulate(data)\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tlistenSubmit()\r\n\t\t\t})\r\n\t}\r\n\r\n\tasync function getServices() {\r\n\t\tconsole.log('getServices')\r\n\t\tlet request = new Request('https://disinfo.quaidorsay.fr/api/cgus/list_services/v1/', requestHeaders);\r\n\t\treturn async_fetch(request);\r\n\t}\r\n\r\n\tfunction populate(services) {\r\n\t\tconsole.log('populate',services);\r\n\t\tlet $form_services = document.getElementById('form_services');\r\n\t\tlet $form_typeofdocuments = document.getElementById('form_typeofdocuments');\r\n\t\tfor (const [key, value] of Object.entries(services)) {\r\n\t\t\tlet option = new Option(key, key);\r\n\t\t\toption.dataset.typeofdocuments = value;\r\n\t\t\t$form_services.add(option);\r\n\t\t}\r\n\t\t$form_services && $form_services.addEventListener('change', (event) => {\r\n\t\t\t$form_typeofdocuments.innerHTML = '';\r\n\t\t\tlet typesofdocuments = event.target.selectedOptions.item(0).dataset.typeofdocuments.split(',');\r\n\t\t\ttypesofdocuments && typesofdocuments.forEach(type => {\r\n\t\t\t\t$form_typeofdocuments.add(new Option(type, type));\r\n\t\t\t});\r\n\t\t})\r\n\t}\r\n\r\n\tfunction listenSubmit() {\r\n\t\tconsole.log('listenSubmit')\r\n\t\tconst $form_explorer = document.getElementById('form_explorer');\r\n\t\t$form_explorer && $form_explorer.addEventListener('submit', (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tlet formData           = new FormData(event.target);\r\n\t\t\tlet service            = formData.get('form_services');\r\n\t\t\tlet type               = formData.get('form_typeofdocuments');\r\n\t\t\tlet firstdocumentdate  = formData.get('form_firstdocumentdate');\r\n\t\t\tlet seconddocumentdate = formData.get('form_seconddocumentdate');\r\n\t\t\tloadDocs(service, type, firstdocumentdate, seconddocumentdate)\r\n\t\t\t\t.then(docs => {\r\n\t\t\t\t\tdiff(docs)\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => {\r\n\t\t\t\t\tnotification(\"error\", err)\r\n\t\t\t\t});\r\n\t\t})\r\n\t}\r\n\r\n\tasync function loadDocs(service, type, firstdocumentdate, seconddocumentdate) {\r\n\t\tconsole.log('loadDocs', service, type, firstdocumentdate, seconddocumentdate);\r\n\t\tlet doc1 = await getDoc(service, type, firstdocumentdate);\r\n\t\tlet doc2 = await getDoc(service, type, seconddocumentdate);\r\n\t\treturn Array(doc1, doc2);\r\n\t}\r\n\r\n\tasync function getDoc(service, type, date) {\r\n\t\tconsole.log('getDoc', service, type, date)\r\n\t\tlet route = encodeURI('https://disinfo.quaidorsay.fr/api/cgus/get_version_at_date/v1/' + service + '/' + type + '/' + date);\r\n\t\tlet request = new Request(route, requestHeaders);\r\n\t\tlet response = await fetch(request)\r\n\t\tif (response.ok){\r\n\t\t\tlet data = await response.json()\t\r\n\t\t\tif (data.error) throw new Error(data.error)\r\n\t\t\tif (data.data == ''){\r\n\t\t\t\t//throw new Error('No version recorded at this date');\r\n\t\t\t\t//Promise.reject('No version recorded at this date');\r\n\t\t\t\treturn await getDoc(service, type, data.next_version.substr(0, 10))\r\n\t\t\t}\r\n\t\t\telse return data; \r\n\t\t} else{\r\n\t\t\tthrow new Error(response.status)\r\n\t\t} \r\n\t}\r\n\r\n\tfunction diff(docs) {\r\n\t\tconsole.log('diff', docs);\r\n\t\tlet $doc1 = document.getElementById('doc1');\r\n\t\t$doc1.innerText = docs[0].data;\r\n\t\tlet $doc2 = document.getElementById('doc2');\r\n\t\t$doc2.innerText = docs[1].data;\r\n\r\n\t\t/* let diff = Diff.diffChars(docs[0].data, docs[1].data);\r\n\t\tlet fragment = document.createDocumentFragment();\r\n\t\tdiff.forEach((part) => {\r\n\t\t\tconst color = part.added ? 'green' : part.removed ? 'red' : 'grey';\r\n\t\t\tspan = document.createElement('span');\r\n\t\t\tspan.style.color = color;\r\n\t\t\tspan.appendChild(document.createTextNode(part.value));\r\n\t\t\tfragment.appendChild(span);\r\n\t\t});\r\n\t\t$doc2.appendChild(fragment); */\r\n\t}\r\n\r\n\t/* Show notification message */\r\n\tfunction notification(type, msg) {\r\n\t\tconst $notification = document.getElementsByClassName('notification')[0];\r\n\t\tconst $notification_content = document.getElementsByClassName('notification_content')[0];\r\n\t\t$notification_content.innerText = msg;\r\n\t\t$notification.classList.toggle('notification-' + type);\r\n\t}\r\n\r\n\t//1 - initialiser le formulaire avec les paramètres passés en url\r\n\r\n\t//2 - le cas échéant afficher les documents demandés\r\n\r\n\t//3 - écouter les changement sur le formulaire\r\n\r\n\t//4 - écouter les changement sur le submit du formulaire\r\n\r\n\t//5 - modifier les paramètres en url\r\n\r\n});"]}